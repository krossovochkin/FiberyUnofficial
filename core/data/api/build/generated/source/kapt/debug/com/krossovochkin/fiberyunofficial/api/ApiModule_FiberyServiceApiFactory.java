// Generated by Dagger (https://dagger.dev).
package com.krossovochkin.fiberyunofficial.api;

import com.krossovochkin.auth.AuthStorage;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_FiberyServiceApiFactory implements Factory<FiberyServiceApi> {
  private final Provider<AuthStorage> authStorageProvider;

  public ApiModule_FiberyServiceApiFactory(Provider<AuthStorage> authStorageProvider) {
    this.authStorageProvider = authStorageProvider;
  }

  @Override
  public FiberyServiceApi get() {
    return fiberyServiceApi(authStorageProvider.get());
  }

  public static ApiModule_FiberyServiceApiFactory create(
      Provider<AuthStorage> authStorageProvider) {
    return new ApiModule_FiberyServiceApiFactory(authStorageProvider);
  }

  public static FiberyServiceApi fiberyServiceApi(AuthStorage authStorage) {
    return Preconditions.checkNotNullFromProvides(ApiModule.fiberyServiceApi(authStorage));
  }
}
